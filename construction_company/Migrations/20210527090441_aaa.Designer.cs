// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using construction_company.Data;

namespace construction_company.Migrations
{
    [DbContext(typeof(construction_companyContext))]
    [Migration("20210527090441_aaa")]
    partial class aaa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("construction_company.Models.Brigades", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrdersID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Staff1ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Staff2ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Staff3ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("OrdersID");

                    b.ToTable("Brigades");
                });

            modelBuilder.Entity("construction_company.Models.Customers", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrdersID")
                        .HasColumnType("bigint");

                    b.Property<string>("PassportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrdersID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("construction_company.Models.Material", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packaging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long?>("TypesOfWorkID")
                        .HasColumnType("bigint");

                    b.Property<long?>("TypesOfWorkID1")
                        .HasColumnType("bigint");

                    b.Property<long?>("TypesOfWorkID2")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("TypesOfWorkID");

                    b.HasIndex("TypesOfWorkID1");

                    b.HasIndex("TypesOfWorkID2");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("construction_company.Models.Orders", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BrigadesID")
                        .HasColumnType("bigint");

                    b.Property<string>("CompletionMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CustomersID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndData")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long?>("StaffID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartData")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TypesOfWorkID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("construction_company.Models.Staff", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<long?>("BrigadesID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BrigadesID1")
                        .HasColumnType("bigint");

                    b.Property<long?>("BrigadesID2")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrdersID")
                        .HasColumnType("bigint");

                    b.Property<string>("PassportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("positionID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BrigadesID");

                    b.HasIndex("BrigadesID1");

                    b.HasIndex("BrigadesID2");

                    b.HasIndex("OrdersID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("construction_company.Models.TypesOfWork", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Material1ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Material2ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Material3ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrdersID")
                        .HasColumnType("bigint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrdersID");

                    b.ToTable("TypesOfWork");
                });

            modelBuilder.Entity("construction_company.Models.position", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<long?>("StaffID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("StaffID");

                    b.ToTable("position");
                });

            modelBuilder.Entity("construction_company.Models.Brigades", b =>
                {
                    b.HasOne("construction_company.Models.Orders", null)
                        .WithMany("Brigades")
                        .HasForeignKey("OrdersID");
                });

            modelBuilder.Entity("construction_company.Models.Customers", b =>
                {
                    b.HasOne("construction_company.Models.Orders", null)
                        .WithMany("Customers")
                        .HasForeignKey("OrdersID");
                });

            modelBuilder.Entity("construction_company.Models.Material", b =>
                {
                    b.HasOne("construction_company.Models.TypesOfWork", null)
                        .WithMany("Material1")
                        .HasForeignKey("TypesOfWorkID");

                    b.HasOne("construction_company.Models.TypesOfWork", null)
                        .WithMany("Material2")
                        .HasForeignKey("TypesOfWorkID1");

                    b.HasOne("construction_company.Models.TypesOfWork", null)
                        .WithMany("Material3")
                        .HasForeignKey("TypesOfWorkID2");
                });

            modelBuilder.Entity("construction_company.Models.Staff", b =>
                {
                    b.HasOne("construction_company.Models.Brigades", null)
                        .WithMany("Staff1")
                        .HasForeignKey("BrigadesID");

                    b.HasOne("construction_company.Models.Brigades", null)
                        .WithMany("Staff2")
                        .HasForeignKey("BrigadesID1");

                    b.HasOne("construction_company.Models.Brigades", null)
                        .WithMany("Staff3")
                        .HasForeignKey("BrigadesID2");

                    b.HasOne("construction_company.Models.Orders", null)
                        .WithMany("Staff")
                        .HasForeignKey("OrdersID");
                });

            modelBuilder.Entity("construction_company.Models.TypesOfWork", b =>
                {
                    b.HasOne("construction_company.Models.Orders", null)
                        .WithMany("TypesOfWork")
                        .HasForeignKey("OrdersID");
                });

            modelBuilder.Entity("construction_company.Models.position", b =>
                {
                    b.HasOne("construction_company.Models.Staff", null)
                        .WithMany("position")
                        .HasForeignKey("StaffID");
                });

            modelBuilder.Entity("construction_company.Models.Brigades", b =>
                {
                    b.Navigation("Staff1");

                    b.Navigation("Staff2");

                    b.Navigation("Staff3");
                });

            modelBuilder.Entity("construction_company.Models.Orders", b =>
                {
                    b.Navigation("Brigades");

                    b.Navigation("Customers");

                    b.Navigation("Staff");

                    b.Navigation("TypesOfWork");
                });

            modelBuilder.Entity("construction_company.Models.Staff", b =>
                {
                    b.Navigation("position");
                });

            modelBuilder.Entity("construction_company.Models.TypesOfWork", b =>
                {
                    b.Navigation("Material1");

                    b.Navigation("Material2");

                    b.Navigation("Material3");
                });
#pragma warning restore 612, 618
        }
    }
}
